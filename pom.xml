<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.raisercostin</groupId>
    <artifactId>maven-defaults-raisercostin</artifactId>
    <version>1.23</version>
  </parent>
  <groupId>org.raisercostin</groupId>
  <artifactId>jedi-nodes-java</artifactId>
  <version>0.24-SNAPSHOT</version>
  <description>Generic node containers serializable/deserializable with jackson and other libraries.</description>
  <url>${git.url}</url>
  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Costin Grigore</name>
      <email>raisercostin@gmail.com</email>
      <organization>raisercostin</organization>
      <organizationUrl>http://raisercostin.org</organizationUrl>
    </developer>
  </developers>
  <scm>
    <connection>${scm.connection.url}</connection>
    <developerConnection>${scm.connection.url}</developerConnection>
    <tag>${project.artifactId}-${project.version}</tag>
    <url>${git.url}</url>
  </scm>
  <issueManagement>
    <system>Github</system>
    <url>${issues.url}</url>
  </issueManagement>
  <distributionManagement>
    <repository>
      <id>dist-release-${dist.id}</id>
      <url>${dist.release.url}</url>
    </repository>
    <snapshotRepository>
      <uniqueVersion>false</uniqueVersion>
      <id>dist-snapshot-${dist.id}</id>
      <url>${dist.snapshot.url}</url>
    </snapshotRepository>
    <!-- 
    <site>
      <id>dist-site-${dist.id}</id>
      <url>${dist.site.url}</url>
    </site>
     -->
  </distributionManagement>
  <properties>
    <checkerframework.version>2.10.0</checkerframework.version>
    <createChecksum>false</createChecksum>
    <dist.release.url>https://github.com/raisercostin/maven-repo.git</dist.release.url>
    <dist.site.url>${dist.url}/sites/${project.groupId}-${project.artifactId}-${project.version}</dist.site.url>
    <dist.snapshot.url>target/snapshots/</dist.snapshot.url>
    <dist.url>${git.url}</dist.url>
    <!--<docker.image.prefix>registry.gitlab.com/dcsi/all/docker/custom</docker.image.prefix> -->
    <docker.image.prefix>com.revomatico</docker.image.prefix>
    <experimentalCoroutines>enable</experimentalCoroutines>
    <git.host>github.com</git.host>
    <git.repo>${project.artifactId}</git.repo>
    <git.url>https://${git.host}/${git.userOrGroup}/${git.repo}</git.url>
    <git.userOrGroup>raisercostin</git.userOrGroup>
    <jackson-bom.version>2.12.3</jackson-bom.version>
    <lombok.version>1.18.20</lombok.version>
    <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>
    <maven.test.skip>false</maven.test.skip>
    <reactor.version>3.2.5.RELEASE</reactor.version>
    <spring.version>5.2.15.RELEASE</spring.version>
    <springboot.version>2.3.11.RELEASE</springboot.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <!-- https://stackoverflow.com/questions/16894032/how-to-use-poms-as-a-dependency-in-maven -->
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${springboot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>
    <!-- utilities -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>31.0.1-jre</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-csv</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-properties</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jsonSchema</artifactId>
      <version>2.12.5</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- logs -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <!-- 
    <dependency>
      <groupId>org.checkerframework</groupId>
      <artifactId>jdk8</artifactId>
      <version>${checkerframework.version}</version>
    </dependency>
     -->
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vavr</groupId>
      <artifactId>vavr-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.raisercostin</groupId>
      <artifactId>jedio</artifactId>
      <version>0.76</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.raisercostin</groupId>
          <artifactId>jedi-nodes-java</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <id>synergian-repo</id>
      <url>https://raw.github.com/synergian/wagon-git/releases</url>
    </repository>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
    </repository>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>raisercostin-github</id>
      <url>https://raw.githubusercontent.com/raisercostin/maven-repo/master/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>synergian-repo</id>
      <url>https://raw.github.com/synergian/wagon-git/releases</url>
    </pluginRepository>
  </pluginRepositories>
  <build>
    <finalName>${project.artifactId}</finalName>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>au.com.acegi</groupId>
                    <artifactId>xml-format-maven-plugin</artifactId>
                    <versionRange>[3.0.7,)</versionRange>
                    <goals>
                      <goal>xml-format</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>1.4.7</version>
        <configuration>
          <!--<repository>${docker.image.prefix}/${project.artifactId}</repository> -->
          <!--<registryUrl>http://office-dockerregistry.openobjects.com:5000/v2/</registryUrl> -->
          <buildArgs>
            <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
          </buildArgs>
          <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
        </configuration>
      </plugin>
      <!-- https://github.com/revelc/formatter-maven-plugin -->
      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
        <version>2.8.1</version>
        <configuration>
          <configFile>${project.basedir}/src/build/eclipse-2020-06-18--java-code-style-formatter.xml</configFile>
          <configJsonFile>${project.basedir}/src/build/json-formatter.properties</configJsonFile>
          <sourceDirectory>${basedir}</sourceDirectory>
          <includes>
            <include>**/**</include>
          </includes>
          <excludes>
            <exclude>.git/</exclude>
            <exclude>target/</exclude>
            <exclude>**/*.xml</exclude>
          </excludes>
          <lineEnding>LF</lineEnding>
          <!-- <encoding>UTF-8</encoding> -->
          <overrideConfigCompilerVersion>true</overrideConfigCompilerVersion>
          <compilerSource>${myJavaVersion}</compilerSource>
          <compilerCompliance>${myJavaVersion}</compilerCompliance>
          <compilerTargetPlatform>${myJavaVersion}</compilerTargetPlatform>
          <!-- <skipJsonFormatting>true</skipJsonFormatting> -->
          <skipXmlFormatting>true</skipXmlFormatting>
        </configuration>
        <dependencies>
          <!-- to use eclipse compiler like in
          - https://stackoverflow.com/questions/33164976/using-eclipse-java-compiler-ecj-in-maven-builds
          - https://projectlombok.org/setup/ecj
          - https://projectlombok.org/setup/ecj-in-maven-pom-example.xml

          <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-compiler-eclipse</artifactId>
            <version>2.8.6</version>
          </dependency>
          <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>ecj</artifactId>
            <version>3.21.0</version>
          </dependency>
          -->
        </dependencies>
        <executions>
          <execution>
            <id>all-format</id>
            <goals>
              <goal>format</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <configuration>
          <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
          <prefix>git</prefix>
          <verbose>false</verbose>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
          <format>properties</format>
          <gitDescribe>
            <skip>false</skip>
            <always>false</always>
            <dirty>-dirty</dirty>
          </gitDescribe>
        </configuration>
        <executions>
          <execution>
            <id>get-the-git-infos</id>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- lombok for ecj compiler
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>get-lombok</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.projectlombok</groupId>
                  <artifactId>lombok</artifactId>
                  <version>${lombok.version}</version>
                  <type>jar</type>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <destFileName>lombok.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      -->
      <plugin>
        <groupId>org.eclipse.m2e</groupId>
        <artifactId>lifecycle-mapping</artifactId>
        <configuration>
          <lifecycleMappingMetadata>
            <pluginExecutions>
              <pluginExecution>
                <pluginExecutionFilter>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-resources-plugin</artifactId>
                  <versionRange>[1.0,)</versionRange>
                  <goals>
                    <goal>resources</goal>
                    <goal>testResources</goal>
                  </goals>
                </pluginExecutionFilter>
                <action>
                  <ignore/>
                </action>
              </pluginExecution>
              <pluginExecution>
                <pluginExecutionFilter>
                  <groupId>org.apache.camel</groupId>
                  <artifactId>camel-package-maven-plugin</artifactId>
                  <versionRange>[2.19.4,)</versionRange>
                  <goals>
                    <goal>prepare-example</goal>
                  </goals>
                </pluginExecutionFilter>
                <action>
                  <ignore/>
                </action>
              </pluginExecution>
            </pluginExecutions>
          </lifecycleMappingMetadata>
        </configuration>
      </plugin>
      <!-- https://github.com/coveo/fmt-maven-plugin -->
      <!-- <plugin> <groupId>com.coveo</groupId> <artifactId>fmt-maven-plugin</artifactId> <version>2.6.0</version> <executions> <execution> <goals>
        <goal>format</goal> </goals> </execution> </executions> </plugin> -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <!--$NO-MVN-MAN-VER$ -->
        <configuration>
          <target>
            <echo message="ant cleanup started."/>
            <fixcrlf eol="unix" excludes="target/**/* .git/**/* src/test/resources/lsports/**/*" includes="**/*.java **/*.xml" preservelastmodified="true" srcdir="${basedir}" tab="remove" tablength="2"/>
            <echo message="ant cleanup finished."/>
          </target>
        </configuration>
        <!-- not always needed -->
        <!--
        <executions>
          <execution>
            <id>all-format</id>
            <phase>validate</phase>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        -->
      </plugin>
      <!-- <sourceDirectory>src/main/kotlin</sourceDirectory> <testSourceDirectory>src/test/kotlin</testSourceDirectory> <plugin> <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId> <version>${kotlin.version}</version> <configuration> <nowarn>false</nowarn> <args> <arg>-Xjsr305=strict</arg>
        Enable strict mode for JSR-305 annotations </args> </configuration> <executions> <execution> <id>compile</id> <phase>compile</phase> <goals>
        <goal>compile</goal> </goals> <configuration> <sourceDirs> <sourceDir>${project.basedir}/src/main/kotlin</sourceDir> <sourceDir>${project.basedir}/src/main/java</sourceDir>
        </sourceDirs> </configuration> </execution> <execution> <id>test-compile</id> <phase>test-compile</phase> <goals> <goal>test-compile</goal> </goals>
        <configuration> <sourceDirs> <sourceDir>${project.basedir}/src/test/kotlin</sourceDir> <sourceDir>${project.basedir}/src/test/java</sourceDir>
        </sourceDirs> </configuration> </execution> </executions> </plugin> -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <!-- <version>3.8.1</version> -->
        <!-- to use eclipse compiler like in
          - https://stackoverflow.com/questions/33164976/using-eclipse-java-compiler-ecj-in-maven-builds
          - https://projectlombok.org/setup/ecj
          - https://projectlombok.org/setup/ecj-in-maven-pom-example.xml
          -->
        <!--$NO-MVN-MAN-VER$ -->
        <!--
        <dependencies>
          <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-compiler-eclipse</artifactId>
            <version>2.8.6</version>
          </dependency>
          <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>ecj</artifactId>
            <version>3.21.0</version>
          </dependency>
        </dependencies>
         -->
        <configuration>
          <source>${source.java.version}</source>
          <target>${target.java.version}</target>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <!-- eclipse compiler -->
          <!--
            set MAVEN_OPTS=-javaagent:target/lombok.jar=ECJ-
            <release>11</release>
           -->
          <!--
          <compilerId>eclipse</compilerId>
          <fork>true</fork>
          <compilerArgs>
            <arg>-javaagent:target/lombok.jar=ECJ</arg>
          </compilerArgs>
           -->
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
          <generatedSourcesDirectory>${project.build.directory}/generated-sources</generatedSourcesDirectory>
        </configuration>
        <!-- <executions> Replacing default-compile as it is treated specially by maven <execution> <id>default-compile</id> <phase>none</phase>
          </execution> Replacing default-testCompile as it is treated specially by maven <execution> <id>default-testCompile</id> <phase>none</phase> </execution>
          <execution> <id>java-compile</id> <phase>compile</phase> <goals> <goal>compile</goal> </goals> </execution> <execution> <id>java-test-compile</id>
          <phase>test-compile</phase> <goals> <goal>testCompile</goal> </goals> </execution> </executions> -->
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>${main.class}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>3.1.11</version>
        <configuration>
          <plugins>
            <plugin>
              <groupId>com.mebigfatguy.fb-contrib</groupId>
              <artifactId>fb-contrib</artifactId>
              <version>7.4.3.sb</version>
            </plugin>
          </plugins>
        </configuration>
        <dependencies>
          <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
          <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
            <version>3.1.11</version>
          </dependency>
        </dependencies>
      </plugin>
      <!--
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <archive>
                <manifest>
                  <mainClass>${main.class}</mainClass>
                </manifest>
              </archive>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <mainClass>${main.class}</mainClass>
        </configuration>
      </plugin>
       -->
      <plugin>
        <groupId>au.com.acegi</groupId>
        <artifactId>xml-format-maven-plugin</artifactId>
        <version>3.0.7</version>
        <executions>
          <execution>
            <id>xml-format</id>
            <goals>
              <goal>xml-format</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <excludes>
                <exclude>**/src/main/resources/**</exclude>
                <exclude>**/src/test/resources/**</exclude>
                <exclude>.git/**</exclude>
                <exclude>**/target/**</exclude>
                <exclude>.m2/**</exclude>
              </excludes>
              <!-- configure your formatting preferences here (see link below) https://acegi.github.io/xml-format-maven-plugin/xml-format-mojo.html -->
              <indentSize>2</indentSize>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>org.apache.maven.scm</groupId>
        <artifactId>maven-scm-provider-gitexe</artifactId>
        <version>1.11.2</version>
      </extension>
      <extension>
        <groupId>ar.com.synergian</groupId>
        <artifactId>wagon-git</artifactId>
        <version>0.3.0</version>
      </extension>
    </extensions>
  </build>
</project>
